name: ðŸš€ CI/CD
on: push
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Install dependencies
        run: |
          npm config set always-auth=true
          yarn install --frozen-lockfile  --network-timeout 1000000
        env:
          CI: false
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Run ESLint
        run: yarn lint
  tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Building test
        run: yarn test
        env:
          MONGO_URL_TEST: ${{ secrets.MONGO_URL_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FILE_SECRET: ${{ secrets.FILE_SECRET }}
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Building test
        run: yarn build
  deploy:
    needs: [lint, tests, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: setup ssh
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
      - name: Build
        run: yarn deploy
        env:
          HOST: ${{ secrets.HOST }}
          HOST_PORT: ${{ secrets.HOST_PORT }}
          HOST_USER: ${{ secrets.HOST_USER }}
          HOST_PATH: ${{ secrets.HOST_PATH }}

          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          MONGO_URL: ${{ secrets.MONGO_URL }}

          TZ: ${{ secrets.TZ }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FILE_SECRET: ${{ secrets.FILE_SECRET }}
